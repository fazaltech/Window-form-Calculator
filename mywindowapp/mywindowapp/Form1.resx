<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGQmsABClECghejz0Ib6pyB2qqgwZZkm4FPGFABBEYDgkw
        RgAAAAAAAAAAAAMDAgMAAAAAAAAAABkKAQAkAAADJzIwFhGW0YkNo+ntDKTy/gmb8v8Gjez9BXrU5whN
        e1pX//8AAAAAAAAAAAB7TCaIWzQRZE0uDEFdOA9FiFofgYhjMqMjr9m6Hcz9/xnH+/8Tvfr/Dar4/weU
        8v8IaamZCAAACAQJCwAAAAAAmlszzJRUJfuYYCjvom8v8rKFQP+yi1DnSJqooUPY+vs91/n/K9T6/xnI
        +/8Orvn/C4PJygwlLx8RPE4AAAAAAJ9jOYWeXy3+qHEz/7SHQv/CnWD/yqt4+3mPg6Fn2fLoat/2/1Lb
        +P8y1vv/F8b8/w2c4u0OTW1IIdL/AAAAAACjbD9DpGky7657OP+9lVX/zK57/9vFnP+rpIy5ds7hyovl
        9vtp1/DdQcfqzR++7NcQpuvpD22gdAAAAAEAAAEApHBCFahxNsqygj7/wp5j/9S6jf/j07L/0sas2m6t
        uohqtLuUSpeHmEOagbItjHO4GHVwtBBTXXEDAAAKBQ8KALmHqAChazFurH063MSfYvHXvY305dOu48zC
        sJ9Hc3BPZcKmzWzVuP1az63/Or+U/x6lcv4ae03ZEC8cMxxWNAATOr8AETm+Nh89n7BHWICjYXKGlUF1
        pI8Sj9G0HYaqnnDSuNps2bz/VM2p/zW9kf8bpnP/GoVR+RVIKWb///8AEDvUAA840SYLQNrjC1/g+g6D
        4vMQpOj5FMLu/xagy8lXtJ63XtKx/0bGn/8otYf/GZ1o/xqASv8YWTGeAAAACxI4yAAWNsQHDTjTsw1Q
        3v8QeeX/Epjo/xOp6/8Um93oOZCPoEjGn/swuo3/HKh1/xmOWf8adj7/GmEy0AwmGSkNKJ4ABynUAA0t
        y3UKN9T/DVTf/w9v5P8QgOb/En/j+yJsm6EwtIbmH6l55R2XZbMcgEykG2s0wBxkMdcWSy9RAAAAAA0j
        xAANI8I7ByDI8Qgw0v8LQtr/DE7d/w1Q3/8XS7izLJtyayKVajAsZUoGPDAzAR1cMAsgZzgrIWZCHAAA
        AAAUJcAAFSXADQ4hxoYLI8jRCinL6Qwxz+YTPNC8HUjDTxcLAAINGTYAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAADdbzABEa84CJEPIGB06xTIhP8IvLkyyEAAA/wBYYFwAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/78AAPwHAABwBwAAAAMAAAADAAAAAwAAAAEAAAABAACAAQAAgAEAAIAAAACAAAAAwAAAAMAA
        AADAPwAA4P8AAA==
</value>
  </data>
</root>